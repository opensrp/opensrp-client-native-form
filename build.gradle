buildscript {
    repositories {
        google()
        mavenCentral()
        maven{  url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
        classpath ('com.android.tools.build:gradle:3.5.3')
        classpath 'gradle.plugin.org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.10.2'
    }
}
configure(allprojects) { project ->
    buildscript {

        version = VERSION_NAME
        group = GROUP

        repositories {
            mavenCentral()
            maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
            maven { url 'https://plugins.gradle.org/m2/'}
            mavenLocal()
            jcenter()
        }
    }
}
project.ext.preDexLibs = !project.hasProperty('disablePreDex')
subprojects {

    group = 'org.smartregister'

    ext.androidToolsBuildGradle = '29.0.3'
    ext.androidBuildToolsVersion = '29.0.3'
    ext.androidMinSdkVersion = 18
    ext.androidCompileSdkVersion = 29
    ext.androidTargetSdkVersion = 29

    ext.androidAnnotationsVersion = '3.0.1'
    ext.androidAnnotationsAPIVersion = '3.0.1'

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "http://acra.googlecode.com/svn/repository/releases" }
        maven { url "https://repo.maven.apache.org/maven2" }
        maven { url "http://cloudant.github.io/cloudant-sync-eap/repository" }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        mavenLocal()
        jcenter()
    }

    // Improve build server performance by allowing disabling of pre-dexing
    // (see http://tools.android.com/tech-docs/new-build-system/tips#TOC-Improving-Build-Server-performance.)
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}
apply plugin: 'java'
apply plugin: 'build-dashboard'
apply plugin: 'io.codearte.nexus-staging'
buildDashboard {
    reports.html.setDestination(file("build/"))
}
test.reports.html.enabled = false
test.reports.junitXml.enabled = false

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}