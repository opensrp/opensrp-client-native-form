buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$androidToolsBuildGradle"
        classpath 'org.apache.commons:commons-lang3:3.12.0'
        classpath 'com.android.tools.lint:lint:25.3.0'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

jacoco {
    toolVersion = "0.8.8"
    reportsDir = file("$buildDir/reports/jacoco")
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultPublishConfig !isReleaseBuild() ? "debug" : "release"

    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        multiDexEnabled true
        testInstrumentationRunner "com.android.test.runner.MultiDexTestRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled false
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }
}


tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    implementation('org.smartregister:opensrp-client-simprints:1.1.0-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
    }
    implementation 'com.github.bmelnychuk:atv:1.2.9'
    implementation('com.google.android.material:material:1.6.1') {
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'

    }
    implementation 'com.github.johnkil.print:print:1.3.1'
    implementation 'com.github.rey5137:material:1.3.1'
    implementation 'org.smartregister:opensrp-client-materialedittext:2.1.6-SNAPSHOT'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation('com.github.ganfra:material-spinner:2.0.0') {
        exclude group: 'com.nineoldandroids', module: 'library'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    implementation('com.google.android.gms:play-services-location:20.0.0') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    implementation('com.google.android.gms:play-services-vision:20.1.3') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }

    implementation 'org.smartregister:opensrp-client-utils:0.0.6-SNAPSHOT'
    implementation 'androidx.test:core:1.4.0'

    def easyRulesVersion = '4.1.2-SNAPSHOT'
    implementation ("org.smartregister:easy-rules-core:$easyRulesVersion"){
    }
    implementation ("org.smartregister:easy-rules-mvel:$easyRulesVersion")
            {
                exclude group: 'org.jeasy', module: 'easy-rules-core'
            }

    implementation 'joda-time:joda-time:2.10.14'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation('io.ona.rdt-capture:lib:2.1.0') {
        exclude group: 'com.android.support.constraint', module: 'constraint-layout'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support.test', module: 'runner'
        exclude group: 'com.android.support.test.espresso', module: 'espresso-core'
        exclude group: 'com.google.android.gms', module: 'play-services-vision'
    }
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    implementation('io.ona.CircleProgressbar:lib:0.1.0@aar') {
        exclude group: 'com.android.support.constraint', module: 'constraint-layout'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support.test', module: 'runner'
        exclude group: 'com.android.support.test.espresso', module: 'espresso-core'
    }
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation "org.greenrobot:eventbus:3.2.0"
    implementation 'androidx.multidex:multidex:2.0.1'

    // PowerMock
    def powerMockVersion = '2.0.9'
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$powerMockVersion"
    implementation('com.github.raihan-mpower:FancyAlertDialog-Android:0.3@aar') {
        exclude group: 'com.android.support', module: 'appcompat-v7'

    }

    androidTestImplementation 'com.jayway.android.robotium:robotium-solo:5.6.3'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation('androidx.test.ext:junit:1.1.3') {
        exclude group: 'com.android.support', module: 'appcompat-v7'

    }
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation('androidx.test:rules:1.4.0') {
        exclude group: 'com.android.support', module: 'appcompat-v7'

    }

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation('com.squareup:fest-android:1.0.8') { exclude module: 'support-v4' }
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation "org.json:json:20220320"
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

    reports {

        xml.enabled = true
        xml.destination = file("${buildDir}/reports/jacoco/jacocoRootReport/merged.xml")

        html.enabled = true
        html.destination file("${buildDir}/reports/jacoco/jacocoRootReport/html")
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*$ViewBinder*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug/classes/", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

tasks.coveralls {
    dependsOn 'jacocoTestReport'
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"
}


apply from: '../maven.gradle'

task javadoc(type: Javadoc) {
    failOnError false
    def mainSrc = "$project.projectDir/src/main/java"
    source = files([mainSrc])
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}
